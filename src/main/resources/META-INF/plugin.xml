<idea-plugin require-restart="true">
	<id>com.nasller.CodeGlancePro</id>
	<name>CodeGlance Pro</name>
	<vendor email="nasller@qq.com" url="https://github.com/Nasller">Nasller</vendor>

	<resource-bundle>messages.CodeGlanceBundle</resource-bundle>

	<description><![CDATA[
		IntelliJ plugin that displays a zoomed out overview or minimap similar to the one found in Sublime into the editor pane.
		The minimap allows for quick scrolling letting you jump straight to sections of code.
		Rework on CodeGlance,support more feature
		<ul>
		<li>Hide original scrollbar.</li>
		<li>Right click to quick config.</li>
		<li>Support markup highlights.</li>
		<li>Support error stripes highlights.</li>
		<li>Support Vcs line highlights.</li>
		<li>Support caret line highlights.</li>
		<li>Support language ColorScheme.</li>
		<li>Quick view code on Glance.</li>
		<li>Automatically calculate width in splitter mode.</li>
		<li>Ctrl-Shift-G to toggle Glance.</li>
		</ul>
	]]></description>

	<change-notes><![CDATA[
	    <h3>2.0.1</h3>
		<ul>
			<li>Fix mark region</li>
		</ul>
		<h3>2.0.0</h3>
		<ul>
			<li>2025.3-EAP</li>
			<li>fix: #181 Quick view is not rendering borders correctly</li>
		</ul>
		<h3>1.9.9</h3>
		<ul>
			<li>Feature: render empty map instead of remove map when out of line range</li>
		</ul>
		<h3>1.9.8</h3>
		<ul>
			<li>2025.2-EAP</li>
		</ul>
		<h3>1.9.7</h3>
		<ul>
			<li>Clion #prama mark support</li>
		</ul>
	]]></change-notes>

	<depends>com.intellij.modules.lang</depends>
	<depends optional="true" config-file="codeglancepro-java.xml">com.intellij.modules.java</depends>
	<depends optional="true" config-file="codeglancepro-rider.xml">com.intellij.modules.rider</depends>
	<depends optional="true" config-file="codeglancepro-clion.xml">com.intellij.modules.cidr.lang</depends>
	<depends optional="true" config-file="codeglancepro-clion-rd.xml">com.intellij.modules.rider.cpp.core</depends>
	<depends optional="true" config-file="codeglancepro-kotlin.xml">org.jetbrains.kotlin</depends>
	<depends optional="true" config-file="codeglancepro-scala.xml">org.intellij.scala</depends>
	<depends optional="true" config-file="codeglancepro-dart.xml">Dart</depends>

	<applicationListeners>
		<listener class="com.nasller.codeglance.agent.MyAppLifecycleListener" topic="com.intellij.ide.AppLifecycleListener"/>
		<listener topic="com.nasller.codeglance.config.SettingsChangeListener" class="com.nasller.codeglance.GlobalSettingsChangeListener"/>
		<listener topic="com.intellij.openapi.editor.colors.EditorColorsListener" class="com.nasller.codeglance.MyEditorColorsListener"/>
	</applicationListeners>

	<actions>
		<action id="CodeGlancePro.toggle" class="com.nasller.codeglance.actions.ToggleVisibleAction">
			<keyboard-shortcut first-keystroke="control shift G" keymap="$default" />
		</action>
		<action id="CodeGlancePro.disable" class="com.nasller.codeglance.actions.DisableByDefaultAction">
			<keyboard-shortcut first-keystroke="control alt shift G" keymap="$default" />
		</action>
	</actions>

	<extensions defaultExtensionNs="com.intellij">
		<applicationService serviceImplementation="com.nasller.codeglance.config.CodeGlanceConfigService"/>
		<editorFactoryListener implementation="com.nasller.codeglance.EditorPanelInjector"/>
		<diff.DiffExtension implementation="com.nasller.codeglance.DiffEditorPanelInjector"/>
		<applicationConfigurable instance="com.nasller.codeglance.config.CodeGlanceConfigurable" key="plugins" bundle="messages.CodeGlanceBundle" />
		<iw.actionProvider implementation="com.nasller.codeglance.extensions.GlanceVisibleActionProvider"/>
		<colorSettingsPage implementation="com.nasller.codeglance.config.CodeGlanceColorsPage"/>
		<additionalTextAttributes scheme="Default" file="colorSchemes/color-default.xml"/>
		<additionalTextAttributes scheme="Darcula" file="colorSchemes/color-default-darcula.xml"/>
		<highlightVisitor implementation="com.nasller.codeglance.extensions.visitor.MarkCommentVisitor"/>
		<errorHandler implementation="com.intellij.diagnostic.JetBrainsMarketplaceErrorReportSubmitter"/>
	</extensions>

	<extensions defaultExtensionNs="org.jetbrains.kotlin">
		<supportsKotlinPluginMode supportsK2="true" />
	</extensions>
</idea-plugin>